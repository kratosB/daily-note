在[Get Started, Part 2: Containers](https://docs.docker.com/get-started/part2/#introduction)
这个页面的例子中，我测试的时候遇到一个问题。

启动

    docker build -t friendlyhello . 

的时候，
step 4 报

    Could not open requirements file: [Errno 2] No such file or directory: 'requirements.txt'
    
错误。

搜了之后，在stackOverFlow找到答案。

[链接](https://stackoverflow.com/questions/36022051/docker-no-such-file-or-directory)

解决方法如下：

>在 ADD . /app  这一行后面  
加上 ADD . .

然后就可以了。

解释：

>The files and directories that are located in the same location as your Dockerfile are indeed available (temporarily) to your docker build. But, after the docker build,
unless you have used ADD or COPY to move those files permanently to the docker container, they will not be available to your docker container after the build is done.
This file context is for the build, but you want to move them to the container.  
You can add the following command:
>
>       ...  
>       ADD . /opt/flask4
>       ADD . .
>       
>       \# Define deafult command.
>       CMD ["python","hello.py"]
>The line  "ADD . ." should copy over all the things in your temporary build context to the container.
The location that these files will go to is where your WORKDIR is pointing to (/opt/flask4).  
If you only wanted to add hello.py to your container, then use
>
>       ADD hello.py hello.py
>So, when you run CMD ["python","hello.py"], the pwd that you will be in is /opt/flask4,
and hello.py should be in there, and running the command python hello.py in that directory should work.